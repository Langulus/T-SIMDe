name: Langulus::TSIMDe CI
on: [push, pull_request] # Trigger on pushes to all branches and for all pull-requests

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false # do not abort on a failed job
      matrix:
        config:
        - {
            # GCC 11 is the minimum required compiler, and comes with Ubuntu 22.04
            name: "Linux-GCC-11-Debug-AVX2", artifact: "Linux-Debug-AVX2.tar.xz",
            os: ubuntu-22.04,
            build_type: Debug,
            cc: "gcc", cxx: "g++",
            cmake_args: "",
            compiler_args: "-mavx2"
          }
        - {
            # GCC 11 is the minimum required compiler, and comes with Ubuntu 22.04
            name: "Linux-GCC-11-Release-AVX2", artifact: "Linux-Release-AVX2.tar.xz",
            os: ubuntu-22.04,
            build_type: RelWithDebInfo,
            cc: "gcc", cxx: "g++",
            cmake_args: "", 
            compiler_args: "-mavx2"
          }
        - {
            # Clang 11 is the minimum required compiler, and comes with Ubuntu 22.04
            name: "Linux-Clang-11-Debug-AVX2", artifact: "Linux-Debug-AVX2.tar.xz",
            os: ubuntu-22.04,
            build_type: Debug,
            cc: "clang", cxx: "clang++",
            cmake_args: "", 
            compiler_args: "-mavx2"
          }
        - {
            # Clang 11 is the minimum required compiler, and comes with Ubuntu 22.04
            name: "Linux-Clang-11-Release-AVX2", artifact: "Linux-Release-AVX2.tar.xz",
            os: ubuntu-22.04,
            build_type: RelWithDebInfo,
            cc: "clang", cxx: "clang++",
            cmake_args: "",
            compiler_args: "-mavx2"
          }
        - {
            name: "Windows-MSVC-2022-Debug-x64-AVX2", artifact: "Windows-MSVC-Debug-x64-AVX2.tar.xz",
            os: windows-latest,
            build_type: Debug,
            cc: "cl", cxx: "cl",
            cmake_args: "-G \"Visual Studio 17 2022\" -A x64",
            compiler_args: "/DWIN32 /D_WINDOWS /arch:AVX2 /EHsc"
          }
        - {
            name: "Windows-MSVC-2022-Release-x64-AVX2", artifact: "Windows-MSVC-Release-x64-AVX2.tar.xz",
            os: windows-latest,
            build_type: RelWithDebInfo,
            cc: "cl", cxx: "cl",
            cmake_args: "-G \"Visual Studio 17 2022\" -A x64",
            compiler_args: "/DWIN32 /D_WINDOWS /arch:AVX2 /EHsc"
          }
        - {
            name: "Windows-MSVC-2022-Debug-x86-AVX2", artifact: "Windows-MSVC-Debug-x86-AVX2.tar.xz",
            os: windows-latest,
            build_type: Debug,
            cc: "cl", cxx: "cl",
            cmake_args: "-G \"Visual Studio 17 2022\" -A Win32",
            compiler_args: "/DWIN32 /D_WINDOWS /arch:AVX2 /EHsc"
          }
        - {
            name: "Windows-MSVC-2022-Release-x86-AVX2", artifact: "Windows-MSVC-Release-x86-AVX2.tar.xz",
            os: windows-latest,
            build_type: RelWithDebInfo,
            cc: "cl", cxx: "cl",
            cmake_args: "-G \"Visual Studio 17 2022\" -A Win32",
            compiler_args: "/DWIN32 /D_WINDOWS /arch:AVX2 /EHsc"
          }

    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Configure
        run: cmake -DCMAKE_C_COMPILER=${{ matrix.config.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} -S . -B out/${{ matrix.config.name }} -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -DCMAKE_CXX_FLAGS="${{ matrix.config.compiler_args }}" ${{ matrix.config.cmake_args }}
      - name: Build
        run: cmake --build out/${{ matrix.config.name }} --config ${{ matrix.config.build_type }}
      - name: Test
        run: ctest --output-on-failure
